using namespace std;

int main() {
    vector<string> ip_addresses;
    struct ifaddrs *ifaddr, *ifa;

    if (getifaddrs(&ifaddr) == -1) {
        cerr << "Error: Unable to get the network interfaces." << endl;
        exit(EXIT_FAILURE);
    }

    for (ifa = ifaddr; ifa != NULL; ifa = ifa->ifa_next) {
        if (ifa->ifa_addr == NULL || ifa->ifa_addr->sa_family != AF_INET) {
            continue;
        }

        struct sockaddr_in *sa = (struct sockaddr_in *) ifa->ifa_addr;
        char ip_address[INET_ADDRSTRLEN];
        inet_ntop(AF_INET, &(sa->sin_addr), ip_address, INET_ADDRSTRLEN);
        ip_addresses.push_back(ip_address);
    }

    freeifaddrs(ifaddr);

    ofstream ip_addresses_file("IP_Addresses");
    ostream_iterator<string> output_iterator(ip_addresses_file, "\n");
    copy(ip_addresses.begin(), ip_addresses.end(), output_iterator);

    cout << "The IP addresses of the connected devices have been saved to IP_Addresses" << endl;

    return 0;
}

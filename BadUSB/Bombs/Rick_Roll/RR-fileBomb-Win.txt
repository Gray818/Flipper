#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <linux/input.h>

#define MAX_KEYCODES 20

void read_keys(int fd, int *keycodes, int *num_keys) {
    struct input_event event;
    int i = 0;
    *num_keys = 0;

    while (i < MAX_KEYCODES) {
        read(fd, &event, sizeof(struct input_event));
        if (event.type == EV_KEY && event.value == 1) {
            keycodes[i++] = event.code;
            *num_keys = i;
        }
    }
}

int main() {
    int fd = open("/dev/hidg0", O_RDWR);
    if (fd < 0) {
        perror("open");
        exit(1);
    }

    int keycodes[MAX_KEYCODES];
    int num_keys = 0;

    read_keys(fd, keycodes, &num_keys);

    char command[256];
    snprintf(command, sizeof(command), "nmap -sn %s/24 > /root/ips.txt", "192.168.0");

    system(command);

    FILE *f = fopen("/root/ips.txt", "r");
    if (f == NULL) {
        perror("fopen");
        exit(1);
    }

    char line[256];
    while (fgets(line, sizeof(line), f)) {
        if (strncmp(line, "Nmap scan report for", 20) == 0) {
            char *ip_start = strchr(line, '(') + 1;
            char *ip_end = strchr(ip_start, ')');
            *ip_end = '\0';
            char *ip = strdup(ip_start);
            printf("IP address: %s\n", ip);
            free(ip);
        }
    }

    fclose(f);

    char *ip_folder = "/root/ip_addresses";
    char ip_file[256];
    snprintf(ip_file, sizeof(ip_file), "%s/%s", ip_folder, "IP_Addresses");

    f = fopen(ip_file, "w");
    if (f == NULL) {
        perror("fopen");
        exit(1);
    }

    fprintf(f, "IP addresses:\n");
    rewind(f);

    while (fgets(line, sizeof(line), f)) {
        printf("%s", line);
    }

    fclose(f);

    close(fd);

    return 0;
}
